<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EveryMinute" xml:space="preserve">
    <value>毎分</value>
  </data>
  <data name="EveryHour" xml:space="preserve">
    <value>毎時</value>
    <comment>EveryHour description</comment>
  </data>
  <data name="AnErrorOccuredWhenGeneratingTheExpressionD" xml:space="preserve">
    <value>式の記述を生成する際にエラーが発生しました。Cron 式の構文を確認してください。</value>
    <comment>AnErrorOccuredWhenGeneratingTheExpressionD description</comment>
  </data>
  <data name="AtSpace" xml:space="preserve">
    <value>次において実施 </value>
    <comment>At description</comment>
  </data>
  <data name="EveryMinuteBetweenX0AndX1" xml:space="preserve">
    <value>{0} から {1} まで毎分</value>
    <comment>EveryMinuteBetweenX0AndX1 description</comment>
  </data>
  <data name="At" xml:space="preserve">
    <value>次において実施</value>
    <comment>At description</comment>
  </data>
  <data name="SpaceAnd" xml:space="preserve">
    <value>と</value>
    <comment>And description</comment>
  </data>
  <data name="EverySecond" xml:space="preserve">
    <value>毎秒</value>
    <comment>EverySecond description</comment>
  </data>
  <data name="EveryX0Seconds" xml:space="preserve">
    <value>{0} 秒ごと</value>
    <comment>EveryX0Seconds description</comment>
  </data>
  <data name="SecondsX0ThroughX1PastTheMinute" xml:space="preserve">
    <value>毎分 {0} 秒から {1} 秒まで</value>
    <comment>SecondsX0ThroughX1PastTheMinute description</comment>
  </data>
  <data name="AtX0SecondsPastTheMinute" xml:space="preserve">
    <value>毎分 {0} 秒過ぎ</value>
    <comment>AtX0SecondsPastTheMinute description</comment>
  </data>
  <data name="EveryX0Minutes" xml:space="preserve">
    <value>{0} 分ごと</value>
    <comment>EveryX0Minutes description</comment>
  </data>
  <data name="MinutesX0ThroughX1PastTheHour" xml:space="preserve">
    <value>毎時 {0} 分から {1} 分まで</value>
    <comment>MinutesX0ThroughX1PastTheHour description</comment>
  </data>
  <data name="AtX0MinutesPastTheHour" xml:space="preserve">
    <value>毎時 {0} 分過ぎ</value>
    <comment>AtX0MinutesPastTheHour description</comment>
  </data>
  <data name="EveryX0Hours" xml:space="preserve">
    <value>{0} 時間ごと</value>
    <comment>EveryX0Hours description</comment>
  </data>
  <data name="BetweenX0AndX1" xml:space="preserve">
    <value>{0} と {1} の間</value>
    <comment>BetweenX0AndX1 description</comment>
  </data>
  <data name="AtX0" xml:space="preserve">
    <value>次において実施 {0}</value>
    <comment>AtX0 description</comment>
  </data>
  <data name="ComaEveryDay" xml:space="preserve">
    <value>、毎日</value>
    <comment>ComaEveryDay description</comment>
  </data>
  <data name="ComaEveryX0DaysOfTheWeek" xml:space="preserve">
    <value>、週のうち {0} 日ごと</value>
    <comment>EveryX0DaysOfTheWeek description</comment>
  </data>
  <data name="ComaX0ThroughX1" xml:space="preserve">
    <value>、{0} から {1} まで</value>
    <comment>X0ThroughX1 description</comment>
  </data>
  <data name="First" xml:space="preserve">
    <value>1 番目</value>
    <comment>First description</comment>
  </data>
  <data name="Second" xml:space="preserve">
    <value>2 番目</value>
    <comment>Second description</comment>
  </data>
  <data name="Third" xml:space="preserve">
    <value>3 番目</value>
    <comment>Third description</comment>
  </data>
  <data name="Fourth" xml:space="preserve">
    <value>4 番目</value>
    <comment>Fourth description</comment>
  </data>
  <data name="Fifth" xml:space="preserve">
    <value>5 番目</value>
    <comment>Fifth description</comment>
  </data>
  <data name="ComaOnThe" xml:space="preserve">
    <value>次に</value>
    <comment>OnThe description</comment>
  </data>
  <data name="SpaceX0OfTheMonth" xml:space="preserve">
    <value>月のうち {0}</value>
    <comment>X0OfTheMonth description</comment>
  </data>
  <data name="ComaOnTheLastX0OfTheMonth" xml:space="preserve">
    <value>月の最後の {0} に</value>
    <comment>OnTheLastX0OfTheMonth description</comment>
  </data>
  <data name="ComaOnlyOnX0" xml:space="preserve">
    <value>{0} にのみ</value>
    <comment>OnlyOnX0 description</comment>
  </data>
  <data name="ComaEveryX0Months" xml:space="preserve">
    <value>、{0} か月ごと</value>
    <comment>EveryX0Months description</comment>
  </data>
  <data name="ComaOnlyInX0" xml:space="preserve">
    <value>{0} でのみ</value>
    <comment>ComaOnlyInX0 description</comment>
  </data>
  <data name="ComaOnTheLastDayOfTheMonth" xml:space="preserve">
    <value>次の最終日に</value>
    <comment>ComaOnTheLastDayOfTheMonth description</comment>
  </data>
  <data name="ComaOnTheLastWeekdayOfTheMonth" xml:space="preserve">
    <value>月の最後の平日に</value>
    <comment>OnTheLastWeekdayOfTheMonth description</comment>
  </data>
  <data name="FirstWeekday" xml:space="preserve">
    <value>最初の平日</value>
    <comment>FirstWeekday description</comment>
  </data>
  <data name="WeekdayNearestDayX0" xml:space="preserve">
    <value>{0} 日の直近の平日</value>
    <comment>WeekdayNearestDayX0 description</comment>
  </data>
  <data name="ComaOnTheX0OfTheMonth" xml:space="preserve">
    <value>月の {0} に</value>
    <comment>ComaOnTheX0OfTheMonth description</comment>
  </data>
  <data name="ComaEveryX0Days" xml:space="preserve">
    <value>、{0} 日ごと</value>
    <comment>ComaEveryX0Days description</comment>
  </data>
  <data name="ComaBetweenDayX0AndX1OfTheMonth" xml:space="preserve">
    <value>、月の {0} 日から {1} 日の間</value>
    <comment>BetweenDayX0AndX1OfTheMonth description</comment>
  </data>
  <data name="ComaOnDayX0OfTheMonth" xml:space="preserve">
    <value>、月の {0} 日目</value>
    <comment>ComaOnDayX0OfTheMonth description</comment>
  </data>
  <data name="SpaceAndSpace" xml:space="preserve">
    <value>と </value>
    <comment>And description</comment>
  </data>
  <data name="ComaEveryMinute" xml:space="preserve">
    <value>、毎分</value>
    <comment>ComaEveryMinute1 description</comment>
  </data>
  <data name="ComaEveryHour" xml:space="preserve">
    <value>、毎時</value>
    <comment>ComaEveryHour description</comment>
  </data>
  <data name="ComaEveryX0Years" xml:space="preserve">
    <value>、{0} 年ごと</value>
    <comment>ComaEveryX0Years description</comment>
  </data>
  <data name="CommaStartingX0" xml:space="preserve">
    <value>、{0} に開始</value>
    <comment>CommaStartingX0 description</comment>
  </data>
  <data name="AMPeriod" xml:space="preserve">
    <value>AM</value>
    <comment>AM / In the morning</comment>
  </data>
  <data name="PMPeriod" xml:space="preserve">
    <value>PM</value>
    <comment>PM / In the afternoon</comment>
  </data>
  <data name="CommaDaysBeforeTheLastDayOfTheMonth" xml:space="preserve">
    <value>月の最終日の {0} 日前</value>
    <comment>CommaDaysBeforeTheLastDayOfTheMonth description</comment>
  </data>
</root>